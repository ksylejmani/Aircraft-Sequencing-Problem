// Generated by CoffeeScript 1.7.1
define(['external/underscore', 'modules/clean/ajax', 'modules/clean/frame_messenger', 'modules/clean/gandalf_util', 'modules/core/uri'], function($u, ajax, FrameMessenger, GandalfUtil, URI) {
  var PDFJS_IFRAME_SELECTOR, PdfLoader, RECEIVES_FRAME_MESSENGER_ACTIONS;
  RECEIVES_FRAME_MESSENGER_ACTIONS = ['viewer-initialized'];
  PDFJS_IFRAME_SELECTOR = 'iframe.pdfjs';
  return PdfLoader = (function() {
    function PdfLoader() {}

    PdfLoader.prototype._frameMessenger = new FrameMessenger();

    PdfLoader.prototype._fileUrl = null;

    PdfLoader.prototype._options = {};

    PdfLoader.prototype.startListening = function() {
      this._frameMessenger.configureChildMessaging(PDFJS_IFRAME_SELECTOR, this.handleTrustedMesssageFromChild.bind(this), RECEIVES_FRAME_MESSENGER_ACTIONS);
      return this._frameMessenger.startListening();
    };

    PdfLoader.prototype.stopListening = function() {
      return this._frameMessenger.stopListening();
    };

    PdfLoader.prototype.handleTrustedMesssageFromChild = function(messageJson) {
      switch (messageJson.action) {
        case 'viewer-initialized':
          return this._sendOpenFileAction();
      }
    };

    PdfLoader.prototype.openFile = function(fileUrl, options) {
      var cannedFileName, filePath, fileUri, query;
      if (options == null) {
        options = {};
      }
      if (fileUrl == null) {
        return;
      }
      $u.defaults(options, {
        disableRange: !GandalfUtil.getGandalfRule('docpreview-pdf-range-request-enabled'),
        presentationMode: false
      });
      cannedFileName = null;
      if (GandalfUtil.getGandalfRule('docpreview-debug-force-test-pdf')) {
        cannedFileName = 'test.pdf';
      } else if (GandalfUtil.getGandalfRule('docpreview-debug-force-test-deck-pdf')) {
        cannedFileName = 'test-deck.pdf';
      }
      if (cannedFileName != null) {
        fileUri = URI.parse(fileUrl);
        query = fileUri.getQuery();
        query.canned_file_name = cannedFileName;
        fileUri.setQuery(query);
        fileUrl = fileUri.toString();
      }
      fileUri = URI.parse(fileUrl.toString());
      if (fileUri.getPath().toString().indexOf('/pri') === 0) {
        filePath = fileUri.getPath().toString().slice(8);
        fileUri.setPath("/pri/get_content_url");
        return ajax.WebRequest({
          url: fileUri.toString(),
          data: {
            path: filePath
          },
          success: (function(_this) {
            return function(response_string) {
              var response;
              response = JSON.parse(response_string);
              return _this._finishOpenFile(response.url, options);
            };
          })(this)
        });
      } else {
        return this._finishOpenFile(fileUrl, options);
      }
    };

    PdfLoader.prototype._finishOpenFile = function(fileUrl, options) {
      if (options == null) {
        options = {};
      }
      this._fileUrl = fileUrl.toString();
      this._options = options;
      return this._sendOpenFileAction();
    };

    PdfLoader.prototype._sendOpenFileAction = function() {
      return this._frameMessenger.postMessageToChildren('open-file', {
        fileUrl: this._fileUrl,
        options: this._options
      });
    };

    return PdfLoader;

  })();
});

//# sourceMappingURL=pdf_loader.map
