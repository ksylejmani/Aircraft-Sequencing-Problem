// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(['jquery', 'modules/clean/ajax', 'modules/core/browser', 'modules/core/i18n', 'modules/core/notify', 'modules/clean/register_form', 'modules/clean/components/login_form', 'modules/clean/dbmodal', 'modules/clean/react/file_comments/logger'], function($j, ajax, Browser, _arg, Notify, RegisterForm, LoginForm, _arg1, FileActivityClientLogger) {
  var CommentsSharedLinkSignupModals, DBModal, _;
  _ = _arg._;
  DBModal = _arg1.DBModal;
  return CommentsSharedLinkSignupModals = (function() {
    CommentsSharedLinkSignupModals.POST_COMMENT_VARIANT = "post_comment_variant";

    CommentsSharedLinkSignupModals.LIKE_COMMENT_VARIANT = "like_comment_variant";

    CommentsSharedLinkSignupModals.SUBSCRIBE_VARIANT = "subscribe_variant";

    function CommentsSharedLinkSignupModals() {
      this._toggle_form = __bind(this._toggle_form, this);
      this._prepare_form = __bind(this._prepare_form, this);
      this._reload = __bind(this._reload, this);
      this.before_modal = __bind(this.before_modal, this);
      this.show_sign_in_modal = __bind(this.show_sign_in_modal, this);
      this.show_sign_up_modal = __bind(this.show_sign_up_modal, this);
      this.hide_modal = __bind(this.hide_modal, this);
      this.init_modals = __bind(this.init_modals, this);
      this.show_register = false;
      this.init_modals();
    }

    CommentsSharedLinkSignupModals.prototype.init_modals = function() {
      this.default_signup_modal = new DBModal({
        element_id: "shared-link-default-comments-signup-modal"
      });
      return this.default_signup_modal.before_show = this.before_modal;
    };

    CommentsSharedLinkSignupModals.prototype.hide_modal = function() {
      return this.default_signup_modal.hide();
    };

    CommentsSharedLinkSignupModals.prototype.show_sign_up_modal = function(variant) {
      this.show_register = true;
      this.variant = variant;
      return this.default_signup_modal.show();
    };

    CommentsSharedLinkSignupModals.prototype.show_sign_in_modal = function(variant) {
      this.show_register = false;
      this.variant = variant;
      return this.default_signup_modal.show();
    };

    CommentsSharedLinkSignupModals.prototype.set_activity_key = function(activity_key) {
      return this.activity_key = activity_key;
    };

    CommentsSharedLinkSignupModals.prototype.before_modal = function(content) {
      var login_form, register_form;
      this._prepare_form(content);
      content.find('.toggle-form-link').click((function(_this) {
        return function() {
          return _this._toggle_form(content);
        };
      })(this));
      register_form = content.find('.register-form');
      if (register_form.length) {
        register_form.on(RegisterForm.REGISTER_SUCCESS, (function(_this) {
          return function(e, user) {
            _this.user = user;
            Notify.success(_("Successfully signed up for Dropbox"));
            FileActivityClientLogger.log_event(Constants.FILE_ACTIVITY_LOG_EVENT_TYPE.CLIENT_SIGN_UP_SUCCESS, _this.activity_key, null, null, _this.user.id);
            return _this._reload();
          };
        })(this));
      }
      login_form = content.find('.login-form');
      if (login_form.length) {
        if (register_form.length) {
          register_form.on(RegisterForm.USER_EXISTS, (function(_this) {
            return function(e) {
              var k, v, _i, _len, _ref;
              _this._toggle_form(content);
              _ref = e.prefill;
              for (v = _i = 0, _len = _ref.length; _i < _len; v = ++_i) {
                k = _ref[v];
                login_form.find(k).val(v);
              }
              return login_form.find(e.focus).focus();
            };
          })(this));
        }
        return login_form.on(LoginForm.LOGIN_SUCCESS, (function(_this) {
          return function(e, user) {
            _this.user = user;
            Notify.success(_("Successfully signed in to Dropbox"));
            FileActivityClientLogger.log_event(Constants.FILE_ACTIVITY_LOG_EVENT_TYPE.CLIENT_SIGN_IN_SUCCESS, _this.activity_key, null, null, _this.user.id);
            return _this._reload();
          };
        })(this));
      }
    };

    CommentsSharedLinkSignupModals.prototype._reload = function() {
      return Browser.reload();
    };

    CommentsSharedLinkSignupModals.prototype._prepare_form = function(content) {
      content.find('.form-component').hide();
      content.find('.text-variant').hide();
      if (this.show_register) {
        content.find('.register-form-component').show();
      } else {
        content.find('.login-form-component').show();
      }
      switch (this.variant) {
        case CommentsSharedLinkSignupModals.POST_COMMENT_VARIANT:
          return content.find('.text-variant.post-comment-variant').show();
        case CommentsSharedLinkSignupModals.LIKE_COMMENT_VARIANT:
          return content.find('.text-variant.like-comment-variant').show();
        case CommentsSharedLinkSignupModals.SUBSCRIBE_VARIANT:
          return content.find('.text-variant.subscribe-variant').show();
        default:
          return content.find('.text-variant.default-variant').show();
      }
    };

    CommentsSharedLinkSignupModals.prototype._toggle_form = function(content) {
      var comment_activity_key, event_type, file_activity_key, login_component, register_component, trigger_type;
      register_component = content.find('.register-form-component');
      login_component = content.find('.login-form-component');
      if (register_component.is(':visible')) {
        event_type = Constants.FILE_ACTIVITY_LOG_EVENT_TYPE.CLIENT_SIGN_IN_MODAL;
        register_component.fadeOut({
          complete: function() {
            return login_component.show();
          }
        });
      } else {
        event_type = Constants.FILE_ACTIVITY_LOG_EVENT_TYPE.CLIENT_SIGN_UP_MODAL;
        login_component.fadeOut({
          complete: function() {
            return register_component.show();
          }
        });
      }
      return FileActivityClientLogger.log_event(event_type = event_type, file_activity_key = this.activity_key, comment_activity_key = null, trigger_type = Constants.FILE_ACTIVITY_LOG_CLIENT_ORIGIN_TYPE.MODAL_TOGGLE_BUTTON);
    };

    return CommentsSharedLinkSignupModals;

  })();
});

//# sourceMappingURL=shared_link_signup_modals.map
